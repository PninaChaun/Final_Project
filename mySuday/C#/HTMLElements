

using System;
using System.Collections;

class MainClass {

  public static string HTMLElements(string str)
    {

        Stack html = new Stack();
        string tempTag = "";
        bool isOpenTag = false;
        bool isCloseTag = false;

        for (int i = 0; i < str.Length; i++)
        {
            if (str[i] == '<')
            {
                if (str[i + 1] == '/')
                    isCloseTag = true;
                else
                    isOpenTag = true;
            }
            else if ((isOpenTag || isCloseTag) && (str[i] != '>'))
            {
                if (str[i] != '/')
                    tempTag += str[i];
            }
            else if (str[i] == '>')
            {
                if (isCloseTag)
                {
                    string topTag = (string)html.Pop();
                    if (topTag != tempTag)
                        return topTag;
                }
                else
                {
                    html.Push(tempTag);
                }

                tempTag = "";
                isOpenTag = false;
                isCloseTag = false;

            }

        }
        
        if (html.Count == 0)
            return "true";
        else
            return (string)html.Pop();

    }

  static void Main() {  
    // keep this function call here
    Console.WriteLine(HTMLElements(Console.ReadLine()));
  } 

}



           ////////// //////////////////////////////////////////////מחזיר true/false                                                                                                                           
  public static bool bracket(string str)//<div><p>hello</p><em>jh</div>
    {
        Stack<string> stack = new Stack<string>();
        int i1 = 0, i2 = 0;
        while (i1 != -1 && i2 != -1)
        {
            i1 = str.IndexOf("<", i2);
            i2 = str.IndexOf(">", i2 + 1);
            if (i1 != -1 && i2 != -1)
            {
                if (str.Substring(i1 + 1, 1) == "/")//close
                {
                    if (stack.Peek() != str.Substring(i1 + 2, (i2) - (i1 + 2)))
                    {
                        Console.WriteLine("current   " + str.Substring(i1 + 2, (i2) - (i1 + 2)));
                        Console.WriteLine("error    " + stack.Peek());
                        return false;
                    }
                    else
                    {
                        stack.Pop();
                    }
                    Console.WriteLine("close  " + str.Substring(i1 + 2, (i2) - (i1 + 2)));
                }
                else//open
                {
                    stack.Push(str.Substring(i1 + 1, (i2) - (i1 + 1)));
                    Console.WriteLine("open  " + str.Substring(i1 + 1, (i2) - (i1 + 1)));
                }
            }

        }
        return true;
    }

